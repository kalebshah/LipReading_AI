knitr::opts_chunk$set(echo = TRUE)
print(unique_combinations)
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv("LipReading_nn_1000_predictions_word_coverage.csv")
library(ggplot2)
df <- df %>%
mutate(word_coverage_quartile = case_when(
word_coverage <= 0.25 ~ "0-0.25",
word_coverage > 0.25 & word_coverage <= 0.5 ~ "0.25-0.5",
word_coverage > 0.5 & word_coverage <= 0.75 ~ "0.5-0.75",
word_coverage > 0.75 ~ "0.75-1"
))
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv("LipReading_nn_1000_predictions_word_coverage.csv")
library(ggplot2)
library(dplyr)
df <- df %>%
mutate(word_coverage_quartile = case_when(
word_coverage <= 0.25 ~ "0-0.25",
word_coverage > 0.25 & word_coverage <= 0.5 ~ "0.25-0.5",
word_coverage > 0.5 & word_coverage <= 0.75 ~ "0.5-0.75",
word_coverage > 0.75 ~ "0.75-1"
))
# View the first few rows to check the result
head(df)
ggplot(data = df, aes(x= post_processed_edit_distance, fill = as.factor(word_coverage_quartile))) +
geom_histogram(stat = 'count')
mean(df$post_processed_edit_distance)
mean(df$word_coverage)
mean(df$original_text_len)
mean(df$edit_distance_difference)
library(dplyr)
df$original_text_len <- nchar(df$original_text)
df$edit_distance_difference <- df$raw_edit_distance - df$post_processed_edit_distance
ggplot(data = df, aes(x= edit_distance_difference)) +
geom_histogram(stat = 'count')
df_prop <- df %>%
group_by(post_processed_edit_distance) %>%
mutate(accuracy = n()/1000) %>%
ungroup()
unique_combinations <- unique(df_prop[, c("post_processed_edit_distance", "accuracy")])
print(unique_combinations)
# Order the unique_combinations by post_processed_edit_distance in ascending order
unique_combinations <- unique_combinations[order(unique_combinations$post_processed_edit_distance), ]
# Calculate the cumulative sum of accuracy
unique_combinations$cumulative_accuracy <- cumsum(unique_combinations$accuracy)
# Write the unique_combinations data frame to a CSV file
write.csv(unique_combinations, "accuracy_rates.csv", row.names = TRUE)
print(unique_combinations)
library(ggplot2)
library(dplyr)
df <- df %>%
mutate(word_coverage_quartile = case_when(
word_coverage <= 0.25 ~ "0-0.25",
word_coverage > 0.25 & word_coverage <= 0.5 ~ "0.25-0.5",
word_coverage > 0.5 & word_coverage <= 0.75 ~ "0.5-0.75",
word_coverage > 0.75 ~ "0.75-1"
))
# View the first few rows to check the result
head(df)
ggplot(data = df, aes(x = post_processed_edit_distance, fill = as.factor(word_coverage_quartile))) +
geom_histogram(stat = 'count') +
labs(
x = "Post Processed Edit Distance",
y = "Count",
fill = "Word Coverage"
)
ggplot(data = df, aes(x= edit_distance_difference)) +
geom_histogram(stat = 'count')  +
labs(
x = "Edit Distance Reduction Distribution",
y = "Count",
)
library(ggplot2)
library(dplyr)
df <- df %>%
mutate(word_coverage_quartile = case_when(
word_coverage <= 0.25 ~ "0-0.25",
word_coverage > 0.25 & word_coverage <= 0.5 ~ "0.25-0.5",
word_coverage > 0.5 & word_coverage <= 0.75 ~ "0.5-0.75",
word_coverage > 0.75 ~ "0.75-1"
))
# View the first few rows to check the result
head(df)
ggplot(data = df, aes(x = post_processed_edit_distance, fill = as.factor(word_coverage_quartile))) +
geom_histogram(stat = 'count') +
labs(title = "Accuracy at different edit distances",
x = "Post Processed Edit Distance",
y = "Count",
fill = "Word Coverage"
)
library(ggplot2)
library(dplyr)
df <- df %>%
mutate(word_coverage_quartile = case_when(
word_coverage <= 0.25 ~ "0-0.25",
word_coverage > 0.25 & word_coverage <= 0.5 ~ "0.25-0.5",
word_coverage > 0.5 & word_coverage <= 0.75 ~ "0.5-0.75",
word_coverage > 0.75 ~ "0.75-1"
))
# View the first few rows to check the result
head(df)
ggplot(data = df, aes(x = post_processed_edit_distance, fill = as.factor(word_coverage_quartile))) +
geom_histogram(stat = 'count') +
labs(title = "Accuracy at Different Edit Distances",
x = "Post Processed Edit Distance",
y = "Count",
fill = "Word Coverage"
)
ggplot(data = df, aes(x= edit_distance_difference)) +
geom_histogram(stat = 'count')  +
labs(
x = "Edit Distance Reduction Distribution",
y = "Count",
)
